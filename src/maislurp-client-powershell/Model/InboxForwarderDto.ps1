#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER InboxId
No description available.
.PARAMETER Field
No description available.
.PARAMETER Match
No description available.
.PARAMETER ForwardToRecipients
No description available.
.PARAMETER CreatedAt
No description available.
.OUTPUTS

InboxForwarderDto<PSCustomObject>
#>

function Initialize-InboxForwarderDto {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InboxId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("RECIPIENTS", "SENDER", "SUBJECT", "ATTACHMENTS")]
        [String]
        ${Field},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Match},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${ForwardToRecipients},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${CreatedAt}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => InboxForwarderDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "inboxId" = ${InboxId}
            "field" = ${Field}
            "match" = ${Match}
            "forwardToRecipients" = ${ForwardToRecipients}
            "createdAt" = ${CreatedAt}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to InboxForwarderDto<PSCustomObject>

.DESCRIPTION

Convert from JSON to InboxForwarderDto<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

InboxForwarderDto<PSCustomObject>
#>
function ConvertFrom-JsonToInboxForwarderDto {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => InboxForwarderDto' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in InboxForwarderDto
        $AllProperties = ("id", "inboxId", "field", "match", "forwardToRecipients", "createdAt")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "inboxId"))) { #optional property not found
            $InboxId = $null
        } else {
            $InboxId = $JsonParameters.PSobject.Properties["inboxId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "field"))) { #optional property not found
            $Field = $null
        } else {
            $Field = $JsonParameters.PSobject.Properties["field"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "match"))) { #optional property not found
            $Match = $null
        } else {
            $Match = $JsonParameters.PSobject.Properties["match"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "forwardToRecipients"))) { #optional property not found
            $ForwardToRecipients = $null
        } else {
            $ForwardToRecipients = $JsonParameters.PSobject.Properties["forwardToRecipients"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "createdAt"))) { #optional property not found
            $CreatedAt = $null
        } else {
            $CreatedAt = $JsonParameters.PSobject.Properties["createdAt"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "inboxId" = ${InboxId}
            "field" = ${Field}
            "match" = ${Match}
            "forwardToRecipients" = ${ForwardToRecipients}
            "createdAt" = ${CreatedAt}
        }

        return $PSO
    }

}

