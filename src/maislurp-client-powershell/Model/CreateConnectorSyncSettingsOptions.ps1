#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Options for creating automatic syncing between an inbox connection and an external mail provider

.PARAMETER SyncEnabled
Enable automatic background sync
.PARAMETER SyncScheduleType
Sync schedule type
.PARAMETER SyncInterval
Sync interval in minutes
.OUTPUTS

CreateConnectorSyncSettingsOptions<PSCustomObject>
#>

function Initialize-CreateConnectorSyncSettingsOptions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${SyncEnabled},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("INTERVAL")]
        [String]
        ${SyncScheduleType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${SyncInterval}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => CreateConnectorSyncSettingsOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "syncEnabled" = ${SyncEnabled}
            "syncScheduleType" = ${SyncScheduleType}
            "syncInterval" = ${SyncInterval}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreateConnectorSyncSettingsOptions<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreateConnectorSyncSettingsOptions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreateConnectorSyncSettingsOptions<PSCustomObject>
#>
function ConvertFrom-JsonToCreateConnectorSyncSettingsOptions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => CreateConnectorSyncSettingsOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CreateConnectorSyncSettingsOptions
        $AllProperties = ("syncEnabled", "syncScheduleType", "syncInterval")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "syncEnabled"))) { #optional property not found
            $SyncEnabled = $null
        } else {
            $SyncEnabled = $JsonParameters.PSobject.Properties["syncEnabled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "syncScheduleType"))) { #optional property not found
            $SyncScheduleType = $null
        } else {
            $SyncScheduleType = $JsonParameters.PSobject.Properties["syncScheduleType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "syncInterval"))) { #optional property not found
            $SyncInterval = $null
        } else {
            $SyncInterval = $JsonParameters.PSobject.Properties["syncInterval"].value
        }

        $PSO = [PSCustomObject]@{
            "syncEnabled" = ${SyncEnabled}
            "syncScheduleType" = ${SyncScheduleType}
            "syncInterval" = ${SyncInterval}
        }

        return $PSO
    }

}

