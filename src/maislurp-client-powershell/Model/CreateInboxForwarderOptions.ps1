#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Options for creating an inbox forwarder

.PARAMETER Field
Field to match against to trigger inbox forwarding for inbound email
.PARAMETER ForwardToRecipients
Email addresses to forward an email to if it matches the field and match criteria of the forwarder
.PARAMETER Match
String or wildcard style match for field specified when evaluating forwarding rules
.OUTPUTS

CreateInboxForwarderOptions<PSCustomObject>
#>

function Initialize-CreateInboxForwarderOptions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("RECIPIENTS", "SENDER", "SUBJECT", "ATTACHMENTS")]
        [String]
        ${Field},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${ForwardToRecipients},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Match}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => CreateInboxForwarderOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "field" = ${Field}
            "forwardToRecipients" = ${ForwardToRecipients}
            "match" = ${Match}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreateInboxForwarderOptions<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreateInboxForwarderOptions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreateInboxForwarderOptions<PSCustomObject>
#>
function ConvertFrom-JsonToCreateInboxForwarderOptions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => CreateInboxForwarderOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in CreateInboxForwarderOptions
        $AllProperties = ("field", "forwardToRecipients", "match")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "field"))) { #optional property not found
            $Field = $null
        } else {
            $Field = $JsonParameters.PSobject.Properties["field"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "forwardToRecipients"))) { #optional property not found
            $ForwardToRecipients = $null
        } else {
            $ForwardToRecipients = $JsonParameters.PSobject.Properties["forwardToRecipients"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "match"))) { #optional property not found
            $Match = $null
        } else {
            $Match = $JsonParameters.PSobject.Properties["match"].value
        }

        $PSO = [PSCustomObject]@{
            "field" = ${Field}
            "forwardToRecipients" = ${ForwardToRecipients}
            "match" = ${Match}
        }

        return $PSO
    }

}

