#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
# Version: 6.5.2
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Options for forwarding an email

.PARAMETER Bcc
Optional bcc recipients
.PARAMETER Cc
Optional cc recipients
.PARAMETER Subject
Subject for forwarded email
.PARAMETER To
To recipients for forwarded email
.OUTPUTS

ForwardEmailOptions<PSCustomObject>
#>

function Initialize-ForwardEmailOptions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Bcc},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${Cc},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Subject},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${To}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => ForwardEmailOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "bcc" = ${Bcc}
            "cc" = ${Cc}
            "subject" = ${Subject}
            "to" = ${To}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ForwardEmailOptions<PSCustomObject>

.DESCRIPTION

Convert from JSON to ForwardEmailOptions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ForwardEmailOptions<PSCustomObject>
#>
function ConvertFrom-JsonToForwardEmailOptions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => ForwardEmailOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ForwardEmailOptions
        $AllProperties = ("bcc", "cc", "subject", "to")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "bcc"))) { #optional property not found
            $Bcc = $null
        } else {
            $Bcc = $JsonParameters.PSobject.Properties["bcc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cc"))) { #optional property not found
            $Cc = $null
        } else {
            $Cc = $JsonParameters.PSobject.Properties["cc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "subject"))) { #optional property not found
            $Subject = $null
        } else {
            $Subject = $JsonParameters.PSobject.Properties["subject"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "to"))) { #optional property not found
            $To = $null
        } else {
            $To = $JsonParameters.PSobject.Properties["to"].value
        }

        $PSO = [PSCustomObject]@{
            "bcc" = ${Bcc}
            "cc" = ${Cc}
            "subject" = ${Subject}
            "to" = ${To}
        }

        return $PSO
    }

}

