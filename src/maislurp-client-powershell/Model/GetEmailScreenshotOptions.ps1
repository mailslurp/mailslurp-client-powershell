#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Options taking a screenshot capture of a rendered email

.PARAMETER Height
Window height in pixels
.PARAMETER Width
Window width in pixels
.OUTPUTS

GetEmailScreenshotOptions<PSCustomObject>
#>

function Initialize-GetEmailScreenshotOptions {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Height},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Width}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => GetEmailScreenshotOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "height" = ${Height}
            "width" = ${Width}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to GetEmailScreenshotOptions<PSCustomObject>

.DESCRIPTION

Convert from JSON to GetEmailScreenshotOptions<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

GetEmailScreenshotOptions<PSCustomObject>
#>
function ConvertFrom-JsonToGetEmailScreenshotOptions {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => GetEmailScreenshotOptions' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in GetEmailScreenshotOptions
        $AllProperties = ("height", "width")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "height"))) { #optional property not found
            $Height = $null
        } else {
            $Height = $JsonParameters.PSobject.Properties["height"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "width"))) { #optional property not found
            $Width = $null
        } else {
            $Width = $JsonParameters.PSobject.Properties["width"].value
        }

        $PSO = [PSCustomObject]@{
            "height" = ${Height}
            "width" = ${Width}
        }

        return $PSO
    }

}

