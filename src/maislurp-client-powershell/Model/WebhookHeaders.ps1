#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

Webhook HTTP headers to include with each request from MailSlurp to your server

.PARAMETER Headers
List of header name value pairs to include with webhook requests
.OUTPUTS

WebhookHeaders<PSCustomObject>
#>

function Initialize-WebhookHeaders {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Headers}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => WebhookHeaders' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($Headers -eq $null) {
            throw "invalid value for 'Headers', 'Headers' cannot be null."
        }


        $PSO = [PSCustomObject]@{
            "headers" = ${Headers}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to WebhookHeaders<PSCustomObject>

.DESCRIPTION

Convert from JSON to WebhookHeaders<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

WebhookHeaders<PSCustomObject>
#>
function ConvertFrom-JsonToWebhookHeaders {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => WebhookHeaders' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in WebhookHeaders
        $AllProperties = ("headers")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        If ([string]::IsNullOrEmpty($Json) -or $Json -eq "{}") { # empty json
            throw "Error! Empty JSON cannot be serialized due to the required property 'headers' missing."
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "headers"))) {
            throw "Error! JSON cannot be serialized due to the required property 'headers' missing."
        } else {
            $Headers = $JsonParameters.PSobject.Properties["headers"].value
        }

        $PSO = [PSCustomObject]@{
            "headers" = ${Headers}
        }

        return $PSO
    }

}

