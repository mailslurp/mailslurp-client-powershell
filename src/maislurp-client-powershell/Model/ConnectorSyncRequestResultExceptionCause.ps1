#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER VarStackTrace
No description available.
.PARAMETER Message
No description available.
.PARAMETER LocalizedMessage
No description available.
.OUTPUTS

ConnectorSyncRequestResultExceptionCause<PSCustomObject>
#>

function Initialize-ConnectorSyncRequestResultExceptionCause {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${VarStackTrace},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LocalizedMessage}
    )

    Process {
        'Creating PSCustomObject: maislurp-client-powershell => ConnectorSyncRequestResultExceptionCause' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "stackTrace" = ${VarStackTrace}
            "message" = ${Message}
            "localizedMessage" = ${LocalizedMessage}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ConnectorSyncRequestResultExceptionCause<PSCustomObject>

.DESCRIPTION

Convert from JSON to ConnectorSyncRequestResultExceptionCause<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ConnectorSyncRequestResultExceptionCause<PSCustomObject>
#>
function ConvertFrom-JsonToConnectorSyncRequestResultExceptionCause {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: maislurp-client-powershell => ConnectorSyncRequestResultExceptionCause' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ConnectorSyncRequestResultExceptionCause
        $AllProperties = ("stackTrace", "message", "localizedMessage")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "stackTrace"))) { #optional property not found
            $VarStackTrace = $null
        } else {
            $VarStackTrace = $JsonParameters.PSobject.Properties["stackTrace"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "localizedMessage"))) { #optional property not found
            $LocalizedMessage = $null
        } else {
            $LocalizedMessage = $JsonParameters.PSobject.Properties["localizedMessage"].value
        }

        $PSO = [PSCustomObject]@{
            "stackTrace" = ${VarStackTrace}
            "message" = ${Message}
            "localizedMessage" = ${LocalizedMessage}
        }

        return $PSO
    }

}

