#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'maislurp-client-powershell' -name 'UserControllerApi' {
    Context 'Get-EntityAutomations' {
        It 'Test Get-EntityAutomations' {
            #$TestResult = Get-EntityAutomations -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -InboxId "TEST_VALUE" -PhoneId "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-EntityEvents' {
        It 'Test Get-EntityEvents' {
            #$TestResult = Get-EntityEvents -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -InboxId "TEST_VALUE" -EmailId "TEST_VALUE" -PhoneId "TEST_VALUE" -SmsId "TEST_VALUE" -AttachmentId "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-EntityFavorites' {
        It 'Test Get-EntityFavorites' {
            #$TestResult = Get-EntityFavorites -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -Filter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-JsonPropertyAsString' {
        It 'Test Get-JsonPropertyAsString' {
            #$TestResult = Get-JsonPropertyAsString -Property "TEST_VALUE" -Body "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-UserInfo' {
        It 'Test Get-UserInfo' {
            #$TestResult = Get-UserInfo
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
