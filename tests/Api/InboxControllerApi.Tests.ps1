#
# MailSlurp API
# MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
# Version: 6.5.2
# Contact: contact@mailslurp.dev
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'maislurp-client-powershell' -name 'InboxControllerApi' {
    Context 'Stop-ScheduledJob' {
        It 'Test Stop-ScheduledJob' {
            #$TestResult = Stop-ScheduledJob -JobId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-Inbox' {
        It 'Test New-Inbox' {
            #$TestResult = New-Inbox -EmailAddress "TEST_VALUE" -Tags "TEST_VALUE" -Name "TEST_VALUE" -Description "TEST_VALUE" -UseDomainPool "TEST_VALUE" -Favourite "TEST_VALUE" -ExpiresAt "TEST_VALUE" -ExpiresIn "TEST_VALUE" -AllowTeamAccess "TEST_VALUE" -InboxType "TEST_VALUE" -VirtualInbox "TEST_VALUE" -UseShortAddress "TEST_VALUE" -DomainId "TEST_VALUE" -DomainName "TEST_VALUE" -Prefix "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-InboxRuleset' {
        It 'Test New-InboxRuleset' {
            #$TestResult = New-InboxRuleset -InboxId "TEST_VALUE" -CreateInboxRulesetOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-InboxWithDefaults' {
        It 'Test New-InboxWithDefaults' {
            #$TestResult = New-InboxWithDefaults
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-InboxWithOptions' {
        It 'Test New-InboxWithOptions' {
            #$TestResult = New-InboxWithOptions -CreateInboxDto "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAllInboxEmails' {
        It 'Test Invoke-DeleteAllInboxEmails' {
            #$TestResult = Invoke-DeleteAllInboxEmails -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAllInboxes' {
        It 'Test Invoke-DeleteAllInboxes' {
            #$TestResult = Invoke-DeleteAllInboxes
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAllInboxesByDescription' {
        It 'Test Invoke-DeleteAllInboxesByDescription' {
            #$TestResult = Invoke-DeleteAllInboxesByDescription -Description "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAllInboxesByName' {
        It 'Test Invoke-DeleteAllInboxesByName' {
            #$TestResult = Invoke-DeleteAllInboxesByName -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteAllInboxesByTag' {
        It 'Test Invoke-DeleteAllInboxesByTag' {
            #$TestResult = Invoke-DeleteAllInboxesByTag -Tag "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteInbox' {
        It 'Test Invoke-DeleteInbox' {
            #$TestResult = Invoke-DeleteInbox -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DoesInboxExist' {
        It 'Test Invoke-DoesInboxExist' {
            #$TestResult = Invoke-DoesInboxExist -EmailAddress "TEST_VALUE" -AllowCatchAll "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DoesInboxHaveAutomations' {
        It 'Test Invoke-DoesInboxHaveAutomations' {
            #$TestResult = Invoke-DoesInboxHaveAutomations
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Clear-Expired' {
        It 'Test Clear-Expired' {
            #$TestResult = Clear-Expired -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AllInboxes' {
        It 'Test Get-AllInboxes' {
            #$TestResult = Get-AllInboxes -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Favourite "TEST_VALUE" -Search "TEST_VALUE" -Tag "TEST_VALUE" -TeamAccess "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -InboxType "TEST_VALUE" -InboxFunction "TEST_VALUE" -DomainId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AllInboxesOffsetPaginated' {
        It 'Test Get-AllInboxesOffsetPaginated' {
            #$TestResult = Get-AllInboxesOffsetPaginated -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Favourite "TEST_VALUE" -Search "TEST_VALUE" -Tag "TEST_VALUE" -TeamAccess "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -InboxType "TEST_VALUE" -InboxFunction "TEST_VALUE" -DomainId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AllPlusAddresses' {
        It 'Test Get-AllPlusAddresses' {
            #$TestResult = Get-AllPlusAddresses -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AllScheduledJobs' {
        It 'Test Get-AllScheduledJobs' {
            #$TestResult = Get-AllScheduledJobs -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-DeliveryStatusesByInboxId' {
        It 'Test Get-DeliveryStatusesByInboxId' {
            #$TestResult = Get-DeliveryStatusesByInboxId -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Emails' {
        It 'Test Get-Emails' {
            #$TestResult = Get-Emails -InboxId "TEST_VALUE" -Size "TEST_VALUE" -Limit "TEST_VALUE" -Sort "TEST_VALUE" -RetryTimeout "TEST_VALUE" -DelayTimeout "TEST_VALUE" -MinCount "TEST_VALUE" -UnreadOnly "TEST_VALUE" -Before "TEST_VALUE" -Since "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ImapAccess' {
        It 'Test Get-ImapAccess' {
            #$TestResult = Get-ImapAccess -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ImapSmtpAccess' {
        It 'Test Get-ImapSmtpAccess' {
            #$TestResult = Get-ImapSmtpAccess -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ImapSmtpAccessEnv' {
        It 'Test Get-ImapSmtpAccessEnv' {
            #$TestResult = Get-ImapSmtpAccessEnv -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ImapSmtpAccessServers' {
        It 'Test Get-ImapSmtpAccessServers' {
            #$TestResult = Get-ImapSmtpAccessServers
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Inbox' {
        It 'Test Get-Inbox' {
            #$TestResult = Get-Inbox -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxByEmailAddress' {
        It 'Test Get-InboxByEmailAddress' {
            #$TestResult = Get-InboxByEmailAddress -EmailAddress "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxByName' {
        It 'Test Get-InboxByName' {
            #$TestResult = Get-InboxByName -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxCount' {
        It 'Test Get-InboxCount' {
            #$TestResult = Get-InboxCount
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxEmailCount' {
        It 'Test Get-InboxEmailCount' {
            #$TestResult = Get-InboxEmailCount -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxEmailsPaginated' {
        It 'Test Get-InboxEmailsPaginated' {
            #$TestResult = Get-InboxEmailsPaginated -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE" -SyncConnectors "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxIds' {
        It 'Test Get-InboxIds' {
            #$TestResult = Get-InboxIds
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxPlusAddress' {
        It 'Test Get-InboxPlusAddress' {
            #$TestResult = Get-InboxPlusAddress -PlusAddressId "TEST_VALUE" -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxPlusAddressById' {
        It 'Test Get-InboxPlusAddressById' {
            #$TestResult = Get-InboxPlusAddressById -PlusAddressId "TEST_VALUE" -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxPlusAddressEmails' {
        It 'Test Get-InboxPlusAddressEmails' {
            #$TestResult = Get-InboxPlusAddressEmails -PlusAddress "TEST_VALUE" -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxPlusAddressEmailsForPlusAddressId' {
        It 'Test Get-InboxPlusAddressEmailsForPlusAddressId' {
            #$TestResult = Get-InboxPlusAddressEmailsForPlusAddressId -PlusAddressId "TEST_VALUE" -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxPlusAddresses' {
        It 'Test Get-InboxPlusAddresses' {
            #$TestResult = Get-InboxPlusAddresses -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxSentCount' {
        It 'Test Get-InboxSentCount' {
            #$TestResult = Get-InboxSentCount -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxSentEmails' {
        It 'Test Get-InboxSentEmails' {
            #$TestResult = Get-InboxSentEmails -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxTags' {
        It 'Test Get-InboxTags' {
            #$TestResult = Get-InboxTags -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxTagsPaginated' {
        It 'Test Get-InboxTagsPaginated' {
            #$TestResult = Get-InboxTagsPaginated -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Inboxes' {
        It 'Test Get-Inboxes' {
            #$TestResult = Get-Inboxes -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -ExcludeCatchAllInboxes "TEST_VALUE" -Before "TEST_VALUE" -Include "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InboxesByTag' {
        It 'Test Get-InboxesByTag' {
            #$TestResult = Get-InboxesByTag -Tag "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-LatestEmailInInbox' {
        It 'Test Get-LatestEmailInInbox' {
            #$TestResult = Get-LatestEmailInInbox -InboxId "TEST_VALUE" -TimeoutMillis "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-OrganizationInboxes' {
        It 'Test Get-OrganizationInboxes' {
            #$TestResult = Get-OrganizationInboxes -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Outboxes' {
        It 'Test Get-Outboxes' {
            #$TestResult = Get-Outboxes -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ScheduledJob' {
        It 'Test Get-ScheduledJob' {
            #$TestResult = Get-ScheduledJob -JobId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ScheduledJobsByInboxId' {
        It 'Test Get-ScheduledJobsByInboxId' {
            #$TestResult = Get-ScheduledJobsByInboxId -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-SmtpAccess' {
        It 'Test Get-SmtpAccess' {
            #$TestResult = Get-SmtpAccess -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-IsEmailAddressAvailable' {
        It 'Test Invoke-IsEmailAddressAvailable' {
            #$TestResult = Invoke-IsEmailAddressAvailable -EmailAddress "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListInboxRulesets' {
        It 'Test Invoke-ListInboxRulesets' {
            #$TestResult = Invoke-ListInboxRulesets -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-ListInboxTrackingPixels' {
        It 'Test Invoke-ListInboxTrackingPixels' {
            #$TestResult = Invoke-ListInboxTrackingPixels -InboxId "TEST_VALUE" -Page "TEST_VALUE" -Size "TEST_VALUE" -Sort "TEST_VALUE" -SearchFilter "TEST_VALUE" -Since "TEST_VALUE" -Before "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Search-Inboxes' {
        It 'Test Search-Inboxes' {
            #$TestResult = Search-Inboxes -SearchInboxesOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-Email' {
        It 'Test Send-Email' {
            #$TestResult = Send-Email -InboxId "TEST_VALUE" -SendEmailOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-EmailAndConfirm' {
        It 'Test Send-EmailAndConfirm' {
            #$TestResult = Send-EmailAndConfirm -InboxId "TEST_VALUE" -SendEmailOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-EmailWithQueue' {
        It 'Test Send-EmailWithQueue' {
            #$TestResult = Send-EmailWithQueue -InboxId "TEST_VALUE" -ValidateBeforeEnqueue "TEST_VALUE" -SendEmailOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-SmtpEnvelope' {
        It 'Test Send-SmtpEnvelope' {
            #$TestResult = Send-SmtpEnvelope -InboxId "TEST_VALUE" -SendSMTPEnvelopeOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-TestEmail' {
        It 'Test Send-TestEmail' {
            #$TestResult = Send-TestEmail -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Send-WithSchedule' {
        It 'Test Send-WithSchedule' {
            #$TestResult = Send-WithSchedule -InboxId "TEST_VALUE" -SendEmailOptions "TEST_VALUE" -SendAtTimestamp "TEST_VALUE" -SendAtNowPlusSeconds "TEST_VALUE" -ValidateBeforeEnqueue "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Set-InboxFavourited' {
        It 'Test Set-InboxFavourited' {
            #$TestResult = Set-InboxFavourited -InboxId "TEST_VALUE" -SetInboxFavouritedOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-ImapAccess' {
        It 'Test Update-ImapAccess' {
            #$TestResult = Update-ImapAccess -UpdateImapAccessOptions "TEST_VALUE" -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-Inbox' {
        It 'Test Update-Inbox' {
            #$TestResult = Update-Inbox -InboxId "TEST_VALUE" -UpdateInboxOptions "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-SmtpAccess' {
        It 'Test Update-SmtpAccess' {
            #$TestResult = Update-SmtpAccess -UpdateSmtpAccessOptions "TEST_VALUE" -InboxId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
